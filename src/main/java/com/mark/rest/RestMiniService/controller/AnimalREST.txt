@DeleteMapping("/delete/{id}")
    public String deleteAnimal(@PathVariable String id){
        Animal animal = animalService.getAnimal(id);

        if(animal == null){
            throw new RuntimeException("Cake not found !");
        }

        animalService.removeAnimal(id);

        return "Animal " + id + " deleted !";
    }
    @GetMapping("/delete/{id}")
    public Animal getA(@PathVariable String id, User user) {

        Authentication auth = SecurityContextHolder.getContext().getAuthentication();
        User users = userService.findUserByUsername(auth.getName());
        //User userAnimal = userRepository.findByUsername(auth.getName());
        //animal.setUsers(new HashSet<User>(Arrays.asList(users)));
        animalService.findByUsers(user);
        while (users == user) {
            Animal animal = animalService.getAnimal(id);

            if (animal == null) {
                throw new RuntimeException("Cake not found : " + id);
            }
            return animal;
        }
        return ;
    }